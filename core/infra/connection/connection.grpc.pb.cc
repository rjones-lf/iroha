// Generated by the gRPC protobuf plugin.
// If you make any local change, they will be lost.
// source: connection.proto

#include "connection.pb.h"
#include "connection.grpc.pb.h"

#include <grpc++/impl/codegen/async_stream.h>
#include <grpc++/impl/codegen/async_unary_call.h>
#include <grpc++/impl/codegen/channel_interface.h>
#include <grpc++/impl/codegen/client_unary_call.h>
#include <grpc++/impl/codegen/method_handler_impl.h>
#include <grpc++/impl/codegen/rpc_service_method.h>
#include <grpc++/impl/codegen/service_type.h>
#include <grpc++/impl/codegen/sync_stream.h>
namespace connection_object {

static const char* IrohaConnection_method_names[] = {
  "/connection_object.IrohaConnection/Operation",
};

std::unique_ptr< IrohaConnection::Stub> IrohaConnection::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  std::unique_ptr< IrohaConnection::Stub> stub(new IrohaConnection::Stub(channel));
  return stub;
}

IrohaConnection::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel)
  : channel_(channel), rpcmethod_Operation_(IrohaConnection_method_names[0], ::grpc::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status IrohaConnection::Stub::Operation(::grpc::ClientContext* context, const ::connection_object::ConsensusEvent& request, ::connection_object::StatusResponse* response) {
  return ::grpc::BlockingUnaryCall(channel_.get(), rpcmethod_Operation_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::connection_object::StatusResponse>* IrohaConnection::Stub::AsyncOperationRaw(::grpc::ClientContext* context, const ::connection_object::ConsensusEvent& request, ::grpc::CompletionQueue* cq) {
  return new ::grpc::ClientAsyncResponseReader< ::connection_object::StatusResponse>(channel_.get(), cq, rpcmethod_Operation_, context, request);
}

IrohaConnection::Service::Service() {
  (void)IrohaConnection_method_names;
  AddMethod(new ::grpc::RpcServiceMethod(
      IrohaConnection_method_names[0],
      ::grpc::RpcMethod::NORMAL_RPC,
      new ::grpc::RpcMethodHandler< IrohaConnection::Service, ::connection_object::ConsensusEvent, ::connection_object::StatusResponse>(
          std::mem_fn(&IrohaConnection::Service::Operation), this)));
}

IrohaConnection::Service::~Service() {
}

::grpc::Status IrohaConnection::Service::Operation(::grpc::ServerContext* context, const ::connection_object::ConsensusEvent* request, ::connection_object::StatusResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


}  // namespace connection_object

