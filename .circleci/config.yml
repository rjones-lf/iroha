version: 2

jobs:
  build:
    # must be IROHA_HOME:
    working_directory: /opt/iroha
    docker:
      - image: hyperledger/iroha-docker-develop
        environment:
          IROHA_HOME: /opt/iroha
          IROHA_BUILD: /opt/iroha/build
      - image: postgres:9.5
      - image: redis:3.2.8
    steps:
      - checkout
      - run:
          name: notify upsource about current build
          command: |
            python3 .circleci/upsource-webhook.py --in-progress || true
      - run:
          name: ensure, required folders created
          command: |
            mkdir -p $IROHA_HOME
            mkdir -p $IROHA_BUILD
      - restore_cache:
          keys:
            - build-cache-{{ .Branch }}
            - build-cache
          paths:
            - ~/.ccache
      - run:
          name: ccache setup
          command: |
            ccache --version
            ccache --show-stats
            ccache --zero-stats
            ccache --max-size=1G
      - run:
          name: cmake
          command: cmake -DCOVERAGE=ON -H$IROHA_HOME -B$IROHA_BUILD
      - run:
          name: make
          command: cmake --build $IROHA_BUILD -- -j2
      - run:
          name: code coverage pre
          command: cmake --build $IROHA_BUILD --target coverage.init.info
      - run:
          name: unit tests, generate xunit-*.xml
          command: |
            GTEST_DIR=$IROHA_BUILD/test_bin
            for test in $(ls $GTEST_DIR); do
              XUTEST=$IROHA_BUILD/xunit-$test.xml
              # generates build/xunit-*.xml files with reports
              $GTEST_DIR/$test --gtest_output=xml:$XUTEST
            done
      - run:
          name: post code coverage
          command: |
            cmake --build $IROHA_BUILD --target coverage.info
            lcov --list $IROHA_BUILD/coverage.info
            bash <(curl -s https://codecov.io/bash) -X fix -f $IROHA_BUILD/coverage.info || echo "Codecov did not collect coverage reports"
      - run:
          name: run analyzers and generate xml reports
          command: |
            # generate reports. they all will be in build directory
            housekeeping/xml-reports.sh
      - run:
          name: execute sonar-scanner
          command: sonar-scanner -Dsonar.login=${SONAR_TOKEN} -Dsonar.projectVersion="${CIRCLE_BRANCH}"

      - run:
          name: ccache teardown
          command: |
            ccache --cleanup
            ccache --show-stats
      - save_cache:
          key: build-cache-{{ .Branch }}
          paths:
            - ~/.ccache
      - save_cache:
          key: build-cache
          paths:
            - ~/.ccache

notify:
  webhooks:
    - url: http://upsource.soramitsu.co.jp:1112
