defaults: &defaults
  working_directory: /opt/iroha
  environment:
    IROHA_HOME: /opt/iroha
    IROHA_BUILD: /opt/iroha/build


version: 2

jobs:
  build:
    <<: *defaults
    docker:
      - image: hyperledger/iroha-docker-develop
      - image: postgres:9.5
      - image: redis:3.2.8
    steps:
      - checkout
      - run:
          name: notify upsource about current build
          command: |
            python3 .circleci/upsource-webhook.py --in-progress || true
      - restore_cache:
          keys:
            - build-cache-{{ .Branch }}-
            - build-cache-{{ .Branch }}
            - build-cache-
            - build-cache
          paths:
            - ~/.ccache

      # build and cache build results
      - run:
          name: ccache setup
          command: |
            ccache --version
            ccache --show-stats
            ccache --zero-stats
            ccache --max-size=1G

      # cmake and make
      - run:
          name: cmake
          command: cmake -DTESTING_XML_OUTPUT=ON -DCOVERAGE=ON -DFIND_PROTOBUF=ON -DFIND_GRPC=ON -H$IROHA_HOME -B$IROHA_BUILD
      - run:
          name: make
          command: |
            cmake --build $IROHA_BUILD -- -j4
      # save cache
      - run:
          name: ccache teardown
          command: |
            ccache --cleanup
            ccache --show-stats
      - save_cache:
          key: build-cache-{{ .Branch }}-{{ epoch }}
          paths:
            - ~/.ccache
      - save_cache:
          key: build-cache-{{ .Branch }}
          paths:
            - ~/.ccache
      - save_cache:
          key: build-cache-{{ epoch }}
          paths:
            - ~/.ccache
      - save_cache:
          key: build-cache
          paths:
            - ~/.ccache

      # test and coverage info
      - run:
          name: code coverage pre
          command: cmake --build $IROHA_BUILD --target coverage.init.info
      - run:
          name: unit tests, generate xunit-*.xml
          command: cmake --build $IROHA_BUILD --target test
      - run:
          name: post code coverage
          command: |
            cmake --build $IROHA_BUILD --target coverage.info
            lcov --list $IROHA_BUILD/coverage.info
            bash <(curl -s https://codecov.io/bash) -X fix -f $IROHA_BUILD/coverage.info || echo "Codecov did not collect coverage reports"
      # analysis
      - run:
          name: gcovr and cppcheck
          command: |
            cmake --build $IROHA_BUILD --target gcovr
            cmake --build $IROHA_BUILD --target cppcheck

      # persist reports
      - persist_to_workspace:
          root: /opt/iroha/build
          paths:
            - reports


      # - run:
      #     name: prepare redistributable dir
      #     command: |
      #       IROHAD=$IROHA_BUILD/bin/irohad
      #       IROHA_CLI=$IROHA_BUILD/bin/iroha-cli
      #       TEST_DIR=$IROHA_BUILD/test_bin
      #       RELEASE=$IROHA_BUILD/release
      #       mkdir -p $RELEASE



      # - persist_to_workspace:
      #     root: /opt/iroha/build/release
      #     paths:
      #       - bin
      #       - test_bin



  sonar:
    <<: *defaults
    docker:
      - image: hyperledger/iroha-docker-develop
    steps:
      - checkout
      - restore_cache:
          keys:
            - sonar
          paths:
            - ~/.sonar
      - attach_workspace:
          at: /opt/iroha/build
      - run:
          name: execute sonar-scanner
          command: |
            PR_NUMBER=$(echo $CI_PULL_REQUEST | egrep -o "[0-9]+")
            sonar-scanner -Dsonar.github.repository="hyperledger/iroha" -Dsonar.analysis.mode="preview" -Dsonar.login=${SONAR_TOKEN} -Dsonar.projectVersion="${CIRCLE_BRANCH}" -Dsonar.github.oauth="${SORABOT_TOKEN}" -Dsonar.github.pullRequest="${PR_NUMBER}"
      - save_cache:
          key: sonar
          paths:
            - ~/.sonar



  # dockerize:
  #   <<: *defaults
  #   machine: true
  #   steps:
  #     - attach_workspace:
  #         at: /opt/iroha/build
  #     - run: TODO
  #         name: todo
  #         command: echo "I am happy albatross"



workflows:
  version: 2
  full_pipeline:
    jobs:
      # build -> sonar -> dockerize
      - build
      - sonar:
          requires:
            - build
      # - dockerize:
      #     requires:
      #       - sonar


notify:
  webhooks:
    - url: http://upsource.soramitsu.co.jp:1112
