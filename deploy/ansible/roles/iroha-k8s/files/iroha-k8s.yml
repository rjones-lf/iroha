---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: iroha-peer
  labels:
    app: iroha
  namespace: iroha-peer-network
spec:
  serviceName: iroha
  replicas: 8
  podManagementPolicy: "Parallel"
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: iroha
  template:
    metadata:
      namespace: iroha-peer-network
      labels:
        app: iroha
    spec:
      terminationGracePeriodSeconds: 7
      initContainers:
      - name: copy-data
        image: busybox
        command: ['sh', '-c', 'cp -v /opt/secrets/$PODNAME/node* /opt/iroha_data && cp -v /opt/iroha_config/* /opt/iroha_data']
        env:
          - name: PODNAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
        volumeMounts:
        - name: iroha-peer-secret-0
          mountPath: /opt/secrets/iroha-peer-0
        - name: iroha-peer-secret-1
          mountPath: /opt/secrets/iroha-peer-1
        - name: iroha-peer-secret-2
          mountPath: /opt/secrets/iroha-peer-2
        - name: iroha-peer-secret-3
          mountPath: /opt/secrets/iroha-peer-3
        - name: iroha-peer-secret-4
          mountPath: /opt/secrets/iroha-peer-4
        - name: iroha-peer-secret-5
          mountPath: /opt/secrets/iroha-peer-5
        - name: iroha-peer-secret-6
          mountPath: /opt/secrets/iroha-peer-6
        - name: iroha-peer-secret-7
          mountPath: /opt/secrets/iroha-peer-7
        - name: iroha-peer-config
          mountPath: /opt/iroha_config
        - name: iroha-peer-data
          mountPath: /opt/iroha_data
      containers:
      - name: postgres
        image: postgres:9.5
        imagePullPolicy: Always
        command: ["docker-entrypoint.sh"]
        args: ["postgres", "-c", "max_prepared_transactions=100"]
        ports:
        - containerPort: 5432
          name: pg-port
        env:
          - name: POSTGRES_PASSWORD
            value: mysecretpassword
          - name: PGDATA
            value: /var/lib/postgresql/data/pgdata
        livenessProbe:
          exec:
            command: ["pg_isready", "-h", "localhost", "-U", "postgres"]
          initialDelaySeconds: 30
          timeoutSeconds: 5
        readinessProbe:
          exec:
            command: ["pg_isready", "-h", "localhost", "-U", "postgres"]
          initialDelaySeconds: 5
          timeoutSeconds: 1
        volumeMounts:
        - name: pg-data
          mountPath: /var/lib/postgresql/data
      - name: iroha
        image: hyperledger/iroha:1.0.0_rc3
        imagePullPolicy: Always
        ports:
        - containerPort: 10001
          name: internal-port
        - containerPort: 50051
          name: torii-port
        env:
          - name: IROHA_POSTGRES_HOST
            value: localhost
          - name: KEY
            value: node
        volumeMounts:
        - name: iroha-peer-data
          mountPath: /opt/iroha_data
        - name: block-store
          mountPath: /tmp/block_store
      volumes:
        - name: iroha-peer-secret-0
          secret:
            secretName: iroha-peer-key-0
        - name: iroha-peer-secret-1
          secret:
            secretName: iroha-peer-key-1
        - name: iroha-peer-secret-2
          secret:
            secretName: iroha-peer-key-2
        - name: iroha-peer-secret-3
          secret:
            secretName: iroha-peer-key-3
        - name: iroha-peer-secret-4
          secret:
            secretName: iroha-peer-key-4
        - name: iroha-peer-secret-5
          secret:
            secretName: iroha-peer-key-5
        - name: iroha-peer-secret-6
          secret:
            secretName: iroha-peer-key-6
        - name: iroha-peer-secret-7
          secret:
            secretName: iroha-peer-key-7
        - name: iroha-peer-config
          configMap:
            name: iroha-config
        - name: iroha-peer-data
          emptyDir: {}
        - name: block-store
          emptyDir: {}
  volumeClaimTemplates:
    - metadata:
        name: pg-data
        namespace: iroha-peer-network
        labels:
          app: iroha
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
    - metadata:
        name: block-store
        namespace: iroha-peer-network
        labels:
          app: iroha
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi